 
 bool AP_Wingtip_x2::update()
{
   /*
        *
        *
        *     _dev = hal.i2c_mgr->get_device(WINGTIP_I2C_BUS, WINGTIP_I2C_ADDR0);
    _dev = hal.i2c_mgr->get_device(WINGTIP_I2C_BUS, WINGTIP_I2C_ADDR1);
        *
        * union wingtip_data data1;
        union wingtip_data data2;

        uint8_t CRC;

        // Take semaphore
        if (!i2c1_sem->take(5)) {
            return;
        }

        // Read the first wingtip board
        hal.i2c1->read(0x32, 7, data1.rxBuffer);

        // Calculate checksum
        CRC = 0;
        for (uint8_t ii = 0; ii<6; ii++) {
            CRC = CRC ^ data1.rxBuffer[ii];
        }

        if (data1.rxBuffer[6] == CRC) {
            _RPM[0]    = data1.data[0];
            _RPM[1]    = data1.data[1];
            _de_raw[0] = data1.data[2];

            _healthy[0] = 1; // rpm1, rpm2, de1

        } else {
            // mark sensor unhealthy
            _healthy[0] = 0; // rpm1, rpm2, de1
        }

        // Read the second wingtip board
        hal.i2c1->read(0x33, 7, data2.rxBuffer);

        // Return semaphore
        i2c1_sem->give();

        // Calculate checksum
        CRC = 0;
        for (uint8_t ii = 0; ii<6; ii++) {
            CRC = CRC ^ data2.rxBuffer[ii];
        }

        if (data2.rxBuffer[6] == CRC) {
            _RPM[2]    = data2.data[0];
            _RPM[3]    = data2.data[1];
            _de_raw[1] = data1.data[2];

            _healthy[1] = 1; // rpm3, rpm4, de2

        } else {
            // mark sensor unhealthy
            _healthy[1] = 0; // rpm3, rpm4, de2
        }*//*
        
        
            _de[0]  = (float)_de_raw[0];
    _de[1]  = (float)_de_raw[1];
    
    return true;
    }